

## 完全背包问题

**简单地推公式**

三重循环

```
d[i+1][j] = max{d[i][j-k*w[i]]+k*v[i]|k>=0}
```

优化后

```
dp[i+1][j] = max{dp[i][j],dp[i+1][j-w[i]]+v[i]}
```

在第i+1个时,添加容量为j-(k-1)*w[i] 已经计算过了，没必要重复计算

**样例:**

You are given coins of different denominations and a total amount of money *amount*. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return `-1`.

```
Input: coins = [1, 2, 5], amount = 11
Output: 3 
Explanation: 11 = 5 + 5 + 1
```

**Example 2:**

```
Input: coins = [2], amount = 3
Output: -1
```



